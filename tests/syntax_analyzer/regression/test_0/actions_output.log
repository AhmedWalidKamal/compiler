METHOD_BODY -> STATEMENT_LIST 
STATEMENT_LIST -> STATEMENT STATEMENT_LIST' 
STATEMENT -> DECLARATION 
DECLARATION -> PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE -> int 
match: int
match: id
match: ;
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
match: id
match: assign
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION1 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
match: num
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION1 -> \L 
match: ;
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> IF 
IF -> if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
match: if
match: (
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION1 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> id 
match: id
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION1 -> relop SIMPLE_EXPRESSION 
match: relop
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
match: num
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
match: )
match: {
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
match: id
match: assign
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION1 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
match: num
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION1 -> \L 
match: ;
match: }
Error: (missing else) - inserted.
Error: (missing {) - inserted.
SYNCH (pop_stack)
Error: (missing }) - inserted.
STATEMENT_LIST' -> \L 
accept
